argo-cd:
  configs:
    secret:
      createSecret: false
  global:
    image:
      repository: alinbalutoiu/argocd
      tag: v2.0.5
    imagePullSecrets: 
      - name: docker-creds
  redis:
    enabled: false
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
  redis-ha:
    enabled: true
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    exporter:
      enabled: false
  dex:
    image:
      repository: dexidp/dex
      tag: v2.30.0
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 15s
        namespace: monitoring
    env:
      - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: argo-workflows-sso
            key: client-secret
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
  controller:
    enableStatefulSet: true
    replicas: 2
    args:
      statusProcessors: "20"
      operationProcessors: "10"
    env:
    - name: "ARGOCD_CONTROLLER_REPLICAS"
      value: "2"
    extraArgs:
    - --repo-server-timeout-seconds
    - "1000"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 15s
        namespace: monitoring
      rules:
        enabled: false
        spec: []
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
  repoServer:
    #replicas: 4
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 75
      targetMemoryUtilizationPercentage: 75
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #     - labelSelector:
    #         matchExpressions:
    #         - key: app.kubernetes.io/name
    #           operator: In
    #           values:
    #           - argocd-repo-server
    #       topologyKey: "kubernetes.io/hostname"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 15s
        namespace: monitoring
    env:
      - name: "ARGOCD_EXEC_TIMEOUT"
        value: "5m"
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
  server:
    replicas: 3
    # autoscaling:
    #   enabled: false
    #   minReplicas: 1
    #   maxReplicas: 5
    #   targetCPUUtilizationPercentage: 50
    #   targetMemoryUtilizationPercentage: 50
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 15s
        namespace: monitoring
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    extraArgs:
    - --insecure
    ingress:
        enabled: true
        hosts:
        - argocd.apps.blah.cloud
        https: false
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-staging
          kubernetes.io/ingress.class: traefik
        ingressClassName: "traefik"
        tls:
        - secretName: argocd-https-cert
          hosts:
          - argocd.apps.blah.cloud
    ingressGrpc:
        enabled: true
        hosts:
        - argocd.apps.blah.cloud
        https: false
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-staging
          kubernetes.io/ingress.class: traefik
        ingressClassName: "traefik"
        tls:
        - secretName: argocd-grpc-cert
          hosts:
          - argocd.apps.blah.cloud
    config:
        admin.enabled: 'true'
        statusbadge.enabled: 'true'
        users.anonymous.enabled: 'true'
        url: https://argocd.apps.blah.cloud
        dex.config: |
          logger:
            level: "debug"
          connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: $dex.github.clientId
              clientSecret: $dex.github.clientSecret
              orgs:
              - name: blahcloud
          staticClients:
            - id: argo-workflow
              name: 'Argo Workflow'
              redirectURIs:
                - https://argo-workflows.apps.blah.cloud/oauth2/callback
              secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
        resource.customizations: |
          admissionregistration.k8s.io/MutatingWebhookConfiguration:
            ignoreDifferences: |
              jsonPointers:
              - /webhooks/0/clientConfig/caBundle
          networking.k8s.io/Ingress:
            health.lua: |
              hs = {}
              hs.status = "Healthy"
              return hs
        resource.exclusions: |
          - apiGroups:
            - "velero.io"
            kinds:
            - Backup
            clusters:
            - '*'
        repositories: |
          - url: https://github.com/mylesagray/home-cluster-gitops.git
          - url: https://charts.helm.sh/stable
            name: stable
            type: helm
        repository.credentials: |
          - url: https://github.com/mylesagray
            passwordSecret:
                name: github-secret
                key: password
            usernameSecret:
                name: github-secret
                key: username
    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
        g, blahcloud:k8s, role:admin
    additionalProjects: 
    - name: default
      namespace: argocd
      additionalAnnotations: 
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: kubernetes
      sourceRepos:
      - '*'
      clusterResourceWhitelist:
      - group: '*'
        kind: '*'
      destinations:
      - namespace: '*'
        server: '*'
    - name: cd
      namespace: argocd
      additionalAnnotations: 
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: kubernetes
      sourceRepos:
      - '*'
      clusterResourceWhitelist:
      - group: '*'
        kind: '*'
      destinations:
      - namespace: '*'
        server: '*'
    additionalApplications:
    - name: bootstrap
      namespace: argocd
      project: default
      source:
        repoURL: https://github.com/mylesagray/home-cluster-gitops.git
        targetRevision: HEAD
        path: apps/bootstrap
      destination:
        server: https://kubernetes.default.svc
        namespace: infra
      syncPolicy:
        automated:
          prune: true
          selfHeal: true